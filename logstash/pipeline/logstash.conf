input {
  beats {
    port => 5044
    # ssl => true
    # ssl_certificate => "/usr/share/logstash/wazuh-indexer-certs/root-ca.pem"  # Path to client cert for Wazuh
    # ssl_key => "/usr/share/logstash/wazuh-indexer-certs/rooo.key"  # Path to client key for Wazuh
  }

  # opensearch {
  #   hosts       => ["https://localhost:9201"]   
  #   user        => "admin"
  #   password    => "mahmoudDev03!"
  #   index       => "logstash-logs-%{+YYYY.MM.dd}"
  #   query       => "{ "query": { "match_all": {}} }"
  # }
}

filter {
  # Optional filters can go here
  # mutate {
  #   rename => { "timestamp" => "@timestamp" }
  #   add_field => { "host.name" => "%{host}" }
  #   # Map additional fields as per ECS here
  # }
  # json {
  #   source => "message"
  # }
  # grok {
  #   match => { "message" => "%{COMBINEDAPACHELOG}" }
  # }
  # date {
  #   match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
  # }
}

output {
  opensearch {
    hosts => ["http://opensearch-node1:9200"]                         # Update this to your OpenSearch URL 
    index => "wazuh-alerts-%{+YYYY.MM.dd}"                            # The index name where you want to store data
    user => "admin"                                                   # Optional: If you have security enabled, provide user credentials
    password => "mahmoudDev03!"                                       # Optional: If you have security enabled
    ssl => false                                                      # Set to true if you're using SSL (https)
    # cacert => "/usr/share/logstash/opensearch-certs/root-ca.pem"    # CA certificate for OpenSearch
    # ssl_certificate_verification => false                           # Disable if hostname mismatch issues occur
    
    # Optionally, add ssl_certificate and ssl_key if required:
    # ssl_certificate => "/usr/share/logstash/config/certs/esnode.pem"
    # ssl_key => "/usr/share/logstash/config/certs/esnode-key.pem"
    # ssl_verify => false                                             # Disable for testing (not recommended for production)
    
    # Optional: disable ILM and template management to avoid compatibility issues
    # ilm_enabled => false
    # manage_template => false

    # ECS compatibility setting (optional, depending on plugin version)
    #ecs_compatibility => "v1"
  }
}